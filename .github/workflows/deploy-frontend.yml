name: Deploy Frontend to Firebase Hosting

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: resounding-age-438010-g3
  FIREBASE_PROJECT_ID: resounding-age-438010-g3

jobs:
  deploy-frontend:
    name: Deploy Frontend to Firebase Hosting
    runs-on: ubuntu-latest

    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "npm"
          cache-dependency-path: "frontend/package-lock.json"

      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Create production environment file
        working-directory: ./frontend
        run: |
          cat > .env.production << EOF
          VITE_FIREBASE_API_KEY=${{ secrets.VITE_FIREBASE_API_KEY }}
          VITE_FIREBASE_AUTH_DOMAIN=${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
          VITE_FIREBASE_PROJECT_ID=${{ secrets.VITE_FIREBASE_PROJECT_ID }}
          VITE_FIREBASE_STORAGE_BUCKET=${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}
          VITE_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
          VITE_FIREBASE_APP_ID=${{ secrets.VITE_FIREBASE_APP_ID }}
          EOF

      - name: Build application
        working-directory: ./frontend
        run: npm run build

      - id: "auth"
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_STAGING_REPEATLY }}

      - name: Setup Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Install Firebase CLI
        working-directory: ./frontend
        run: npm install firebase-tools

      - name: Deploy to Firebase Hosting
        working-directory: ./frontend
        run: |
          ./node_modules/.bin/firebase deploy --only hosting:tune-swap --project ${{ env.FIREBASE_PROJECT_ID }}
